name: Deploy Compose Runner Stack

on:
  release:
    types: [published]

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install CDK dependencies
        working-directory: infra/cdk
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy CDK stack
        working-directory: infra/cdk
        env:
          RESULTS_PREFIX: compose-runner/results
          TASK_CPU: 4096
          TASK_MEMORY_MIB: 30720
          STATE_MACHINE_TIMEOUT_SECONDS: 7200
        run: |
          source .venv/bin/activate
          VERSION=${GITHUB_REF_NAME}
          cdk deploy \
            --require-approval never \
            --outputs-file cdk-outputs.json \
            -c composeRunnerVersion=${VERSION} \
            -c resultsPrefix=${RESULTS_PREFIX} \
            -c taskCpu=${TASK_CPU} \
            -c taskMemoryMiB=${TASK_MEMORY_MIB} \
            -c stateMachineTimeoutSeconds=${STATE_MACHINE_TIMEOUT_SECONDS}

      - name: Smoke test submission and status endpoints
        working-directory: infra/cdk
        run: |
          SUBMIT_URL=$(jq -r '.ComposeRunnerStack.ComposeRunnerSubmitFunctionUrl' cdk-outputs.json)
          STATUS_URL=$(jq -r '.ComposeRunnerStack.ComposeRunnerStatusFunctionUrl' cdk-outputs.json)
          if [ -z "$SUBMIT_URL" ] || [ "$SUBMIT_URL" = "null" ]; then
            echo "Submit Function URL not found in outputs"
            exit 1
          fi
          if [ -z "$STATUS_URL" ] || [ "$STATUS_URL" = "null" ]; then
            echo "Status Function URL not found in outputs"
            exit 1
          fi

          body='{"meta_analysis_id": "pFGy6g3LRo9x", "environment": "production", "no_upload": true}'
          response=$(curl -s -w "\n%{http_code}" -X POST "$SUBMIT_URL" -H "Content-Type: application/json" -d "$body")
          submit_code=$(echo "$response" | tail -n1)
          submit_json=$(echo "$response" | head -n1)
          echo "$submit_json" > smoke_submit.json
          echo "Submit status code: $submit_code"
          if [ "$submit_code" != "202" ]; then
            echo "Submit endpoint failed: $submit_json"
            exit 1
          fi
          job_id=$(jq -r '.job_id' smoke_submit.json)
          artifact_prefix=$(jq -r '.artifact_prefix' smoke_submit.json)
          if [ -z "$job_id" ] || [ "$job_id" = "null" ]; then
            echo "Submit response missing job_id: $submit_json"
            exit 1
          fi
          if [ -z "$artifact_prefix" ] || [ "$artifact_prefix" = "null" ]; then
            echo "Submit response missing artifact_prefix: $submit_json"
            exit 1
          fi

          status_body=$(printf '{"job_id":"%s"}' "$job_id")
          status_response=$(curl -s -w "\n%{http_code}" -X POST "$STATUS_URL" -H "Content-Type: application/json" -d "$status_body")
          status_code=$(echo "$status_response" | tail -n1)
          status_json=$(echo "$status_response" | head -n1)
          echo "$status_json" > smoke_status.json
          echo "Status status code: $status_code"
          if [ "$status_code" != "200" ]; then
            echo "Status endpoint failed: $status_json"
            exit 1
          fi
          status_value=$(jq -r '.status' smoke_status.json)
          if [ "$status_value" = "null" ] || [ -z "$status_value" ]; then
            echo "Status response missing status: $status_json"
            exit 1
          fi
